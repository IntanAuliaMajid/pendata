Traceback (most recent call last):
  File "/usr/local/python/3.12.1/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/codespace/.local/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/python/3.12.1/lib/python3.12/asyncio/base_events.py", line 684, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.neighbors import NearestNeighbors
from sklearn.preprocessing import StandardScaler
from IPython.display import display

# 1. Magic command agar grafik muncul di Jupyter Notebook
%matplotlib inline  

# 2. Load dataset
iris = pd.read_csv("hasil_gabungan.csv")

# 4. Standarisasi data agar memiliki skala yang sama
scaler = StandardScaler()
iris_scaled = scaler.fit_transform(iris_numeric)

# 5. Gunakan NearestNeighbors untuk mencari K tetangga terdekat
k = 5
nbrs = NearestNeighbors(n_neighbors=k)
nbrs.fit(iris_scaled)

# 6. Hitung jarak rata-rata ke K tetangga terdekat
distances, indices = nbrs.kneighbors(iris_scaled)
mean_distances = distances.mean(axis=1)

# 7. Tentukan threshold outlier
threshold = np.percentile(mean_distances, 95)
outliers = np.where(mean_distances > threshold)[0]

# 8. Tambahkan informasi outlier ke dataset
iris["outlier"] = "Normal"
iris.loc[outliers, "outlier"] = "Outlier"

# 9. Tampilkan hanya data outlier
print("Data dengan label outlier:")
display(iris[iris["outlier"] == "Outlier"])

# 10. Scatter plot (Hanya ditampilkan di Jupyter Notebook, tidak disimpan)
plt.figure(figsize=(8,6))
sns.scatterplot(data=iris, x="petal_length", y="petal_width", hue="outlier", palette={"Normal": "blue", "Outlier": "red"})
plt.title("Deteksi Outlier dengan KNN (Petal Length vs Petal Width)")

------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[12], line 17[0m
[1;32m     15[0m [38;5;66;03m# 4. Standarisasi data agar memiliki skala yang sama[39;00m
[1;32m     16[0m scaler [38;5;241m=[39m StandardScaler()
[0;32m---> 17[0m iris_scaled [38;5;241m=[39m scaler[38;5;241m.[39mfit_transform([43miris_numeric[49m)
[1;32m     19[0m [38;5;66;03m# 5. Gunakan NearestNeighbors untuk mencari K tetangga terdekat[39;00m
[1;32m     20[0m k [38;5;241m=[39m [38;5;241m5[39m

[0;31mNameError[0m: name 'iris_numeric' is not defined

